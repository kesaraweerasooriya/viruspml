// This file has been autogenerated using CoD4X 1.8 server. //
// If it contains wrong data, please create issue here:     //
//    https://github.com/callofduty4x/CoD4x_Server/issues   //
/*
	addScriptCommand( COMMAND_NAME, COMMAND_POWER )
	
	COMMAND_NAME = Command name, this is used to invoke the command ingame with !
	COMMAND_POWER = Power (integer) needed to invoke the command. Set to 1 if you want it to be usable by anyone. 0 will make it rcon only.

	--- commandHandler ---
	self = the player entity invoking the command
	cmd = command name from addScriptCommand
	arg = arguments supplied with command
*/
init()
{
	addscriptcommand( "fov", 1 );
	addscriptcommand( "fps", 1 );
	addscriptcommand( "music", 1 );
	
	thread plugins\plugins::eventHandler( ::commandHandler, "connect" );
}

commandHandler()
{
	self endon( "disconnect" );
	level endon( "game_ended" );
	
	for(;;)
	{
		self waittill( "cmd_executed", cmd, arg );
		
		waittillframeend;
		
		switch( cmd )
		{
			case "fps":
				if( self.pers["fullbright"] == 0 )
				{
					self iPrintlnBold( "Fullbright ^2ON ^7" );
					self setClientDvar( "r_fullbright", 1 );
					self setstat(3155,1);
					self.pers["fullbright"] = 1;
				}
				else
				{
					self iPrintlnBold( "Fullbright ^1OFF" );
					self setClientDvar( "r_fullbright", 0 );
					self setstat(3155,0);
					self.pers["fullbright"] = 0;
				}
				break;

			case "fov":
				if(self.pers["fov"] == 1 )
				{
					self iPrintlnBold( "Field of View Scale: ^11.0" );
					self setClientDvar( "cg_fovscale", 1.0 );
					self setClientDvar( "cg_fov", 80 );
					self setstat(3156,0);
					self.pers["fov"] = 0;
				}
				else if(self.pers["fov"] == 0)
				{
					self iPrintlnBold( "Field of View Scale: ^11.25" );
					self setClientDvar( "cg_fovscale", 1.25 );
					self setClientDvar( "cg_fov", 80 );
					self setstat(3156,2);
					self.pers["fov"] = 2;
				}
				else if(self.pers["fov"] == 2)
				{
					self iPrintlnBold( "Field of View Scale: ^11.125" );
					self setClientDvar( "cg_fovscale", 1.125 );
					self setClientDvar( "cg_fov", 80 );
					self setstat(3156,1);
					self.pers["fov"] = 1;
				}
				break;
				
			case "music":
				if( !self.pers["disable_music"] )
				{
					self.pers["disable_music"] = 1;
					self iprintlnbold( "Killcam music ^1OFF" );
					self setStat(3157,1);
				}
				else
				{
					self.pers["disable_music"] = 0;
					self iprintlnbold( "Killcam music ^2ON" );
					self setStat(3157,0);
				}
				break;
				
			default:
				logPrint( "Unknown command invoked: " + cmd + " for player " + self.name + " with arguments: " + arg + "\n" );
				break;
		}
		
		waittillframeend;
	}
}