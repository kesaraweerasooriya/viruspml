// This file has been autogenerated using CoD4X 1.8 server. //
// If it contains wrong data, please create issue here:     //
//    https://github.com/callofduty4x/CoD4x_Server/issues   //
#include mickey\utility;

init()
{	
	thread mickey\events::addConnectEvent( ::onPlayerConnect );
	thread mickey\events::addConnectEvent( ::persistentStuff );
}

persistentStuff()
{
	self endon( "disconnect" );
	
	self setClientDvars( "net_ip", getDvar( "net_ip" ), "scr_menu_message", getDvar( "scr_menu_message" ), "vip_clan_name", getDvar( "vip_clan_name" ) );

	if( !isDefined( self.pers["disable_music"] ) )
		self.pers["disable_music"] = 0;
	
	if( !level.leiizko_dvars[ "cmd_enable" ] )
		return;
	
	self waittill( "spawned_player" );
	
	if( !isDefined( self.pers["fullbright"] ) )
	{
		self.pers["fullbright"] = self getStat(3155);
		waittillframeend;
		self.pers["fov"] = self getStat(3156);
		waittillframeend;
		self.pers["disable_music"] = self getStat(3157);
		waittillframeend;
	}
	
	if( self.pers["fullbright"] == 1 )
		self setClientDvar( "r_fullbright", 1 );
	
	if( self.pers["fov"] == 2 )
		self setClientDvar( "cg_fovscale", 1.25 );
	else if( self.pers["fov"] == 1 )
		self setClientDvar( "cg_fovscale", 1.125 );
	else if( self.pers["fov"] == 0 )
		self setClientDvar( "cg_fovscale", 1.0 );
		
	//self iprintlnbold( "FPS: " + self.pers["fullbright"] + " | FOV: " + self.pers["fov"] + " | MUSIC: " + self.pers["disable_music"] );
}

onPlayerConnect()
{
	self endon( "disconnect" );
	level endon( "game_ended" );
	
	if( getTime() - game["game_start_time"] < 15000 )
	{
		self.pers[ "isWelcomed" ] = true;
		return;
	}

	if( !isDefined( self.pers[ "isWelcomed" ] ) )
		self.pers[ "isWelcomed" ] = false;

	self waittill( "spawned_player" );
	waittillframeend;

	if( !self.pers[ "isWelcomed" ] )
	{
		self.pers[ "isWelcomed" ] = true;
		self thread fancyText();
		
		if( level.leiizko_dvars[ "scr_welcome_public" ] )
			self thread publicWelcome( level.leiizko_dvars[ "scr_welcome_geo" ] );
	}
}

fancyText()
{
	self endon( "disconnect" );
	level endon( "game_ended" );

	self.welcome = NewClientHudElem( self );
	self.welcome setText( level.leiizko_dvars[ "scr_welcome_text" ] );
	self.welcome.alpha = 1;
	self.welcome.glowalpha = 1;
	self.welcome setPulseFX( 75, 6000, 1500 );
	self.welcome.glowColor = ( 0.88627, 0.40321, 0.16078 );
	self.welcome.archived = false;
	self.welcome.alignX = "center";
	self.welcome.horzAlign = "center";
	self.welcome.vertAlign = "top";
	self.welcome.alignY = "top";
	self.welcome.x = 0;
	self.welcome.y = 115;
	self.welcome.fontscale = 2.4;
	self.welcome.color = ( 1, 1, 1 );
	
	wait 7;
	
	if( isDefined( self.welcome ) )
		self.welcome destroy();
}

publicWelcome( geoWelcome )
{
	self endon( "disconnect" );
	level endon( "game_ended" );
	
	while( !isDefined( self.pers[ "VIP" ] ) )
		wait 1;

	if( geoWelcome )
	{
		if( !self.pers[ "VIP" ] )
			exec( "say Welcome^5 " + self.name + " ^7from ^5" + self getgeolocation(2) );
		else if( self.pers[ "VIP" ] )
			exec( "say ^1Heads up! ^3VIP^7[^5" + self.pers[ "VIP_STAGE" ] + "^7] ^3" + self.name + " ^2joined the game from ^5" + self getgeolocation(2) );
	}
	
	else
		exec( "say Welcome^5 " + self.name );
}